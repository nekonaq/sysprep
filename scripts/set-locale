#!/bin/sh
set -e +x
COPYING="$( cat <<'EOF'
Copyright 2023 tnak@nekonaq.com
License Apache 2.0: <http://www.apache.org/licenses/LICENSE-2.0>
EOF
)"
prog="${0##*/}"
run="${PT__noop:+: }"

RCSID='$Id: set-locale,v 1.5 2024/01/18 21:13:28 nak Exp nak $'

usage() {
  cat <<EOF
Usage:
  $prog [OPTION...] [LOCALE]

  システムのロケール (LANG) を設定する。
  パラメータを指定しない場合は現在のロケールを表示する。

Options:
  -h, --help           このヘルプを表示する。
  -h, --help           このヘルプを表示する。
  --version            プログラムのバージョンを表示する。

Example:
  $prog en_US.UTF-8

EOF
}

print_version() {
  local version="$( echo "$RCSID" | awk '{ print $3, gensub(/\//, "-", "g", $4)}' )"
  if [ -z "${version# }" ]; then
    version="wip-$( date -Id -r "$0" )"
  fi
  echo "$prog $version\n$COPYING"
}

ensure_root() {
  if [ "$( id -u )" != 0 ]; then
    echo "$prog: You must be a root." >&2
    return 1
  fi
}

get_locale() {
  ( localectl 2>/dev/null || cat /etc/default/locale ) |
    awk -F: 'match($0, /LANG=(\S+)$/, ma) {print ma[1]}'
}

locale__() {
  local value="$1"
  if [ -z "$value" ]; then
    locale__show
    return
  fi
  locale__test "$value"
}

locale__show() {
  local value="$1"
  echo "locale: [$( get_locale )]"
}

locale__test() {
  local value="$1"
  [ "$value" = "$( get_locale )" ]
}

locale__update() {
  local value="$1"
  if ! locale__test "$value"; then
    locale__set "$value"
  fi
}

locale__set() {
  local locale="$1"
  ensure_root
  ( set -x
    ${run}localectl set-locale "LANG=$locale"
  ) || (
    set -x
    # dbus が動作していない場合の処置
    ${run}update-locale "LANG=$locale"
  )
}

main() {
  if [ -n "$PT__task" ]; then
    exec 2>&1
    set -- "$PT_value"

    local epp_arg='<%= $op %>'
    case "$epp_arg" in
      \<*) ;;
      *) PT_op="$epp_arg";;
    esac
  fi

  ARGS=$( getopt --name $prog --long help,version,dry-run,test --options h -- "$@" )
  if [ $? != 0 ]; then
    echo "$prog: getopt error occured: $?" >&2
    exit 2
  fi
  eval set -- "$ARGS"

  local op="${PT_op:-update}"
  while [ $# -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
        return
        ;;
      --version)
        print_version
        return
        ;;
      --test)
        op=test
        ;;
      --dry-run)
        run=': '
        ;;
      --)
        shift
        break
        ;;
    esac
    shift
  done

  local locale="$1"
  if [ -z "$locale" ]; then
    locale__show
    return
  fi
  "locale__$op" "$locale"
}

main "$@"

# Local Variables:
# fill-column: 84
# End:
