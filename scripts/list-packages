#!/bin/sh
set -e +x
COPYING="$( cat <<'EOF'
Copyright 2023 tnak@nekonaq.com
License Apache 2.0: <http://www.apache.org/licenses/LICENSE-2.0>
EOF
)"
prog="${0##*/}"

RCSID='$Id: list-packages,v 1.4 2024/01/18 21:11:50 nak Exp nak $'

usage() {
  cat <<EOF
Usage:
  $prog [OPTION...]

  システム・パッケージのステータスを表示する

Options:
  --installed          インストールしているすべてのパッケージ (デフォルト)
  -R,--required        優先順位 required のパッケージ
  -I,--important       優先順位 important のパッケージ
  -S,--standard        優先順位 standard のパッケージ
  -w,--width=WIDTH     表示の幅 (デフォルト 120)
  -F,--display-format=FORMAT
                       表示フォーマット
  --manifest           表示の幅・フォーマットを manifest と同じにする
  -h, --help           このヘルプを表示する。
  --version            プログラムのバージョンを表示する。

NOTE:
  フィールド間を単一の空白文字にする:
  $prog -w0 --installed

  インストールしているパッケージ一覧を manifest 形式で出力する:
  $prog --manifest --installed

EOF
}

print_version() {
  local version="$( echo "$RCSID" | awk '{ print $3, gensub(/\//, "-", "g", $4)}' )"
  if [ -z "${version# }" ]; then
    version="wip-$( date -Id -r "$0" )"
  fi
  echo "$prog $version\n$COPYING"
}

ensure_aptitude() {
  if ! command -v aptitude >/dev/null; then
    echo "$prog: aptitude: command not found." >&2
    return 1
  fi
}

main() {
  ensure_aptitude
  ARGS=$( getopt --name $prog --long help,version,installed,required,important,standard,width:,display-format:,manifest --options hRISw:F: -- "$@" )
  if [ $? != 0 ]; then
    echo "$prog: getopt error occured: $?" >&2
    exit 2
  fi
  eval set -- "$ARGS"

  local query=
  local width=120
  local format='%c%a%M %p %V# %s# %P'
  while [ $# -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
        return
        ;;
      --version)
        print_version
        return
        ;;
      --installed)
        query="?installed"
        ;;
      -R|--required)
        query="$query\n~prequired"
        ;;
      -I|--important)
        query="$query\n~pimportant"
        ;;
      -S|--standard)
        query="$query\n~pstandard"
        ;;
      -w|--width)
        width="$2"
        shift
        ;;
      -F|--display-format)
        format="$2"
        shift
        ;;
      --manifest)
        width=0
        format='%p %V'
        ;;
      --)
        shift
        break
        ;;
    esac
    shift
  done

  local qstr="$( 
    echo "${query:-?installed}" |
      sort | uniq | grep -v '^$' | paste -s -d'|'
  )"
  export LANG=C.UTF-8
  aptitude -q -w"$width" search "$qstr" -F"$format"
}

main "$@"

# Local Variables:
# fill-column: 84
# End:
